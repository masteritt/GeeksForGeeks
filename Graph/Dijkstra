#include <iostream>

using namespace std;
#define MAX 10
#define INF 9999999

int N;
int a[MAX][MAX];
bool sptSet[MAX];
int dist[MAX];

void printSPT()
{
	for (int i = 1; i < N; i++)
		cout<< i<< " "<< dist[i]<<endl;
}
int minKey(){
	int min=INF,min_index;
	for (int i = 0; i < N; i++)
	{
		if ((!sptSet[i]) && (dist[i] < min))
		{
			min = dist[i];
			min_index = i;
		}
	}
	return min_index;
}
void Dijkstra(){
	for (int i = 0; i < N; i++)
	{
		sptSet[i] = false;
		dist[i] = INF;
	}
	dist[0] = 0;
	for (int count = 0; count < (N - 1); count++)
	{
		int u = minKey();
		sptSet[u] = true;
		for (int v = 0; v < N; v++)
		{
			if (a[u][v] && !sptSet[v] && (dist[u]!=INF) && ((a[u][v] +dist[u] )< dist[v]))
			{
				dist[v] = a[u][v] + dist[u];
			}
		}
	}
	printSPT();
}
int main(){
	cin >> N ;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			cin >> a[i][j];

	Dijkstra();
	return 0;
}
