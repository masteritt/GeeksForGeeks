#include<iostream>
using namespace std;
#define Max 8
int N;
int inp[Max][Max];
int sol[Max][Max]; 

void printSolution(){
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
			printf("%3d ", sol[i][j]);
		cout << endl;
	}
}
bool isSafe(int i, int j){
	if ((i >= 0) && (j >= 0) && (i < N) && (j < N) && (inp[i][j] == 1))
		return true;
	return false;
}
bool solveMazeUtils(int x, int y){
	if ((x == N - 1) && (y == N - 1))
	{
		sol[x][y] = 1;
		return true;
	}
	if (isSafe(x, y)){
		sol[x][y] = 1;
		if (solveMazeUtils(x, y + 1)){
			return true;
		}
		if (solveMazeUtils(x + 1, y)){
			return true;
		}
		sol[x][y] = 0;
	}
	return false;
}
void solveMaze(){
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			sol[i][j] = 0;

	if (solveMazeUtils(0, 0)){
		printSolution();
	}
	else
		cout << "No Solution" << endl;
}

int main(){
	//freopen("input.txt", "r", stdin);
	cin >> N;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			cin >> inp[i][j];
	solveMaze();
	return 0;
}
