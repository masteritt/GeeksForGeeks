#include <iostream>
using namespace std;

#define MAX 11
int cost[MAX][MAX];
int dist[MAX][MAX];
int M, N;

int min(int a, int b){
	return a < b ? a : b;
}
int min(int a, int b,int c){
	return min(min(a,b),c);
}
int minCostPath(){
	dist[1][1] = cost[1][1];
	for (int i = 2; i <= M; i++)
		dist[i][1] = dist[i - 1][1] + cost[i][1];
	for (int j = 2; j <= N; j++)
		dist[1][j] = dist[1][j-1] + cost[1][j];

	for (int i = 2; i <= M; i++)
		for (int j = 2; j <= N; j++)
			dist[i][j] = min(dist[i - 1][j], dist[i][j - 1], dist[i - 1][j - 1]) + cost[i][j];

	return dist[M][N];
}
int main(){
	//freopen("input.txt", "r", stdin);
	cin >> M>>N;
	for (int i = 1; i <= M; i++)
		for (int j = 1; j <= N; j++)
			cin >> cost[i][j];

	cout << minCostPath() << endl;
	return 0;
}
