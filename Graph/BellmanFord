#include <iostream>

using namespace std;
#define MAX 10
#define INF 9999999

int N;
int a[MAX][MAX];
bool sptSet[MAX];
int dist[MAX];

void printSPT()
{
	for (int i = 0; i < N; i++)
		cout << i << " " << dist[i] << endl;
}
int minKey(){
	int min = INF, min_index;
	for (int i = 0; i < N; i++)
	{
		if ((!sptSet[i]) && (dist[i] < min))
		{
			min = dist[i];
			min_index = i;
		}
	}
	return min_index;
}
void BellmanFord(){
	for (int i = 0; i < N; i++)
	{
		dist[i] = INF;
	}
	dist[0] = 0;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
		{
			if (a[i][j] && (dist[i] != INT_MAX) && (dist[i] + a[i][j] < dist[j]))
				dist[j] = dist[i] + a[i][j];
		}
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
		{
			if (a[i][j] && (dist[i] != INT_MAX) && (dist[i] + a[i][j] < dist[j]))
				cout << "Graph contains Negative weight cycles" << endl;
		}
	printSPT();
}
int main(){
	freopen("input.txt", "r", stdin);
	cin >> N;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			cin >> a[i][j];

	BellmanFord();
	return 0;
}
//5
//0 -1 4 0  0
//0 0  3 2  2
//0 0  0 0  0
//0 1  5 0  0
//0 0  0 -3 0

//0 0
//1 -1
//2 2
//3 -2
//4 1
