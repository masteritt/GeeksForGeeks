#include <iostream>
using namespace std;
#define INF 99999999
#define MAX 20
int S[MAX];
int N,M;
int dp[MAX][MAX+1];

int min(int x, int y){
	return (x > y) ? y : x;
}
int count(){
	for (int i = 0; i < M; i++)
		dp[i][0] = 0;
	for (int i = 0; i < M; i++)
		for (int j = 1; j < (N + 1); j++)
		{
			int x, y;
			if (j>=S[i])
				x = dp[i][j - S[i]];//coin step back
			else
				x = INF;
			if (i >= 1)
				y = dp[i - 1][j];//up value
			else
				y = INF;
			dp[i][j] = min(x + 1, y);
			if (dp[i][j] == INF) //no solution for all cases.
				return 0;
		}
	return dp[M-1][N];
}

int main(){
	cin >> N>>M;
	for (int i = 0; i < M; i++)
		cin >> S[i];
	cout << count() << endl;

	return 0;
}
//Min(up,CoinValueStepsBack +1)
//   0 1 2 3 4 5 6 7 8 9 10 11
// 1 0 1 2 3 4 5 6 7 8 9 10 11 
// 5 0 1 2 3 4 1 2 3 4 5 2  3
// 6 0 1 2 3 4 1 1 2 3 4 2  2
// 8 0 1 2 3 4 1 1 2 1 2 2  2 
//2
